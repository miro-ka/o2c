name: tests and code analyzer

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  tests:
    name: Run Tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Julia
        uses: julia-actions/setup-julia@v2
        with:
          version: '1.11.2'

      # Cache Julia dependencies
      - name: Cache Julia Artifacts and Compiled Packages
        uses: actions/cache@v3
        with:
          path: ~/.julia
          key: ${{ runner.os }}-julia-${{ hashFiles('**/Project.toml', '**/Manifest.toml') }}
          restore-keys: |
            ${{ runner.os }}-julia-

      - name: Install dependencies
        run: |
          julia --project=@. -e 'using Pkg; Pkg.instantiate()'

      - name: Run tests
        run: |
          julia --project=@. -e 'using Pkg; Pkg.test()'

  # Optional: Static Analysis with JET
  static-analysis:
    name: Static Analysis with JET
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Julia
        uses: julia-actions/setup-julia@v2
        with:
          version: '1.11.1'

      # Cache dependencies
      - name: Cache Julia Artifacts and Compiled Packages
        uses: actions/cache@v3
        with:
          path: ~/.julia
          key: ${{ runner.os }}-julia-${{ hashFiles('**/Project.toml', '**/Manifest.toml') }}
          restore-keys: |
            ${{ runner.os }}-julia-

      - name: Install JET
        run: |
          julia --project=@. -e 'using Pkg; Pkg.add("JET")'

      - name: Run JET Analysis
        run: |
          julia --project=@. -e 'using JET; report_package()'
